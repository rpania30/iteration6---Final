<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listener Profile</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f7f7f9;
            margin: 0;
            padding: 0;
        }

        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1em 2em;
            background-color: #007BFF;
            color: white;
        }

        .navbar a {
            color: white;
            text-decoration: none;
            padding: 0.5em 1em;
            transition: background-color 0.3s ease;
        }

        .navbar a:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .container {
            max-width: 1200px;
            margin: 50px auto;
            padding: 2em;
            background-color: #ffffff;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .flex-container {
            display: flex;
            gap: 2em;
            flex-wrap: wrap;
        }

        .box {
            border: 1px solid #e0e0e0;
            padding: 1em;
            flex: 1;
            border-radius: 8px;
            transition: transform 0.3s ease;
        }

        .box:hover {
            transform: translateY(-5px);
            box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
        }

        h4 {
            font-size: 18px;
            color: #333;
            border-bottom: 1px solid #e0e0e0;
            padding-bottom: 10px;
            margin-bottom: 10px;
        }

        ul {
            list-style-type: none;
            padding-left: 0;
        }

        li {
            padding: 0.5em 0;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 16px;
            color: #555;
        }

        li:hover {
            background-color: #e9f5ff;
            color: #007BFF;
        }

        #preferences {
            display: flex;
            gap: 1em;
            flex-wrap: wrap;
        }

        .preference {
            background-color: #e9f5ff;
            color: #007BFF;
            padding: 0.5em;
            border-radius: 5px;
            display: flex;
            gap: 0.5em;
            align-items: center;
        }

        .delete-btn {
            cursor: pointer;
            font-size: 12px;
            background-color: #ff4757;
            color: #fff;
            border: none;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
    <script>
        function getCookie(name) {
            const cookies = document.cookie.split(';');
            for (const cookie of cookies) {
                const [cookieName, cookieValue] = cookie.trim().split('=');
                if (cookieName === name) {
                    return cookieValue;
                }
            }
            return null;
        }

        // Retrieve the 'RED_id' cookie
        const redId = getCookie('RED_id');

        if (redId) {
            console.log('RED_id:', redId);
            // You can use the 'redId' variable as needed
        } else {
            console.log('RED_id not found');
            // Disable page rendering or redirect to a login page
            document.body.innerHTML = '<h3>User not found</h3>';
        }
    </script>
</head>

<body>

    <header><%- include('../partials/header') %></header>

    <div class="container">
        <!-- Preferences Section -->
        <div class="box">
            <h4>Preferences</h4>
            <div id="preferences">
            </div>
            <br>
            <input type="text" id="newPreference" placeholder="Add new preference" />
            <button onclick="addPreference()">Add</button>
            <button id="reset">Reset</button>
        </div>

        <br>
        <br>
        <div class="flex-container">
        <!-- Upcoming Songs Section -->
        <div class="box">
            <h4>DJs</h4>
            <ul id="dj-list">
                <% djs.forEach(function(dj) { %>
                    <li onclick="showSongs('<%= dj.name %>')"><%= dj.name %></li>
                <% }) %>
            </ul>
            <div class="box">
                <h4>Songs</h4>
                <ul id="songs-list"></ul>
            </div>
        </div>

        <!-- Recommended Songs Section -->
        <div class="box">
            <h4>Recommended Songs</h4>
            <ul id="recommended-songs-list">
                <% songs.forEach(function(song) { %>
                    <li><%= song %></li>
                <% }); %>
            </ul>
        </div>
    </div>
    </div>
    
    <script>
       
         


        
        function logout() {
            // Delete the cookie
            document.cookie = "RED_id=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";

            preferencesData.length = 0;
            window.location.href = '/';
        }
        var appData = <%- JSON.stringify(djs) %>;
        console.log('Data from app.js:', appData);
        const songsData = [];
        for (let i = 0; i < appData.length; i++) {
            const dj = appData[i];
            songsData.push({
                key: dj.name,
                value: dj.songs
            });
        }
        console.log(songsData);
        

        const preferencesData = [];

                
        function showSongs(djName) {
            const songsList = document.getElementById('songs-list');
            songsList.innerHTML = '';  // Clear current songs

            const selectedDj = songsData.find(dj => dj.key === djName);
            if (selectedDj) {
                for (const song of selectedDj.value) {
                    const songItem = document.createElement('li');
                    songItem.textContent = song;
                    songsList.appendChild(songItem);
                }
            } else {
                console.error('DJ not found:', djName);
            }
        }


        function UpdatePref(){
            const readurl = 'http://localhost:4000/db/getPreference';
            fetch(readurl, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                // Include any additional headers if needed
            },
            })
            .then(response => {
                if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Success fuck:', data);
                for(let d of data){
                    preferencesData.push([d.Name,d._id]);
                }
                displayPreferences();
                document.getElementById('newPreference').value = ''; 
                
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
        UpdatePref();
        function addPreference() {
            const newPreference = document.getElementById('newPreference').value;
            
            if(newPreference == null || newPreference == ""){
                return "";
            }

            const url = 'http://localhost:4000/db/addPreference';

            fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                // Include any additional headers if needed
            },
            body: JSON.stringify({"p": newPreference}),
            })
            .then(response => {
                if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(async data => {
                console.log('Success:', data);
                //preferencesData.length = 0;
                preferencesData.push([newPreference,data._id]);
                displayPreferences();
                document.getElementById('newPreference').value = ''; 
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        function deletePreference(index) {
            const readurl = 'http://localhost:4000/db/removePreference/' + preferencesData[index][1];

            fetch(readurl, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    // Include any additional headers if needed
                },
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Success:', data);
                    preferencesData.splice(index, 1);
                    displayPreferences();
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }


        function displayPreferences() {
            const preferencesDiv = document.getElementById('preferences');
            preferencesDiv.innerHTML = '';

            preferencesData.forEach((preference, index) => {
                const prefDiv = document.createElement('div');
                prefDiv.className = 'preference';

                const prefText = document.createElement('span');
                prefText.textContent = preference[0];
                prefDiv.appendChild(prefText);

                const deleteBtn = document.createElement('button');
                deleteBtn.className = 'delete-btn';
                deleteBtn.textContent = 'x';
                deleteBtn.onclick = () => deletePreference(index);
                prefDiv.appendChild(deleteBtn);

                preferencesDiv.appendChild(prefDiv);
            });
        }

        document.getElementById('reset').addEventListener('click', function() {
            const readurl = 'http://localhost:4000/db/removePreference/' + -12;
            fetch(readurl, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    preferencesData.length = 0;
                    displayPreferences();   
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            preferencesData.length = 0;
            displayPreferences();      
        });
    </script>
</body>

</html>